// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux16(a=in, b=false, sel=reset, out=resetout);
    // logic for load 
    Not(in=reset, out=notreset);
    And(a=notreset, b=load, out=notresetandload);
    Or(a=notresetandload, b=reset, out=notresetandloadorreset);
    Mux16(b=resetout, a=incmuxout, sel=notresetandloadorreset, out=intoreg); 
    Register(in=intoreg, load=true, out=regout);
    Inc16(in=regout, out=incout);
    Mux16(a=regout, b=incout, sel=inc, out=incmuxout);
    And16(a=regout, b=true, out=out);
}
